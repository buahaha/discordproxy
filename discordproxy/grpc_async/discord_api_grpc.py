# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: discord_api.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import discord_api_pb2


class DiscordApiBase(abc.ABC):

    @abc.abstractmethod
    async def SendDirectMessage(self, stream: 'grpclib.server.Stream[discord_api_pb2.DirectMessageRequest, discord_api_pb2.DiscordReply]') -> None:
        pass

    @abc.abstractmethod
    async def GetGuildChannels(self, stream: 'grpclib.server.Stream[discord_api_pb2.GetGuildChannelsRequest, discord_api_pb2.GetGuildChannelsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/discord_api.DiscordApi/SendDirectMessage': grpclib.const.Handler(
                self.SendDirectMessage,
                grpclib.const.Cardinality.UNARY_UNARY,
                discord_api_pb2.DirectMessageRequest,
                discord_api_pb2.DiscordReply,
            ),
            '/discord_api.DiscordApi/GetGuildChannels': grpclib.const.Handler(
                self.GetGuildChannels,
                grpclib.const.Cardinality.UNARY_UNARY,
                discord_api_pb2.GetGuildChannelsRequest,
                discord_api_pb2.GetGuildChannelsResponse,
            ),
        }


class DiscordApiStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SendDirectMessage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/discord_api.DiscordApi/SendDirectMessage',
            discord_api_pb2.DirectMessageRequest,
            discord_api_pb2.DiscordReply,
        )
        self.GetGuildChannels = grpclib.client.UnaryUnaryMethod(
            channel,
            '/discord_api.DiscordApi/GetGuildChannels',
            discord_api_pb2.GetGuildChannelsRequest,
            discord_api_pb2.GetGuildChannelsResponse,
        )
